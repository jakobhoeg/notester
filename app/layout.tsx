import type { Metadata } from "next";
import { Rubik, JetBrains_Mono } from "next/font/google";
import { cookies } from "next/headers";
import "./globals.css";
import PGliteWrapper from "./pglite-wrapper";
import TanstackProvider from "./tanstack-provider";
import { ThemeProvider } from "@/components/providers/theme-provider";
import { SidebarProvider } from "@/components/providers/sidebar";
import { LeftSidebar } from "@/components/sidebar";
import { Toaster } from "@/components/ui/sonner"

const rubikSans = Rubik({
  variable: "--font-sans",
  subsets: ["latin"],
  weight: ["300", "400", "500", "600", "700"],
});

const jetbrainsMono = JetBrains_Mono({
  variable: "--font-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = await cookies();
  const defaultOpen = cookieStore.get("sidebar_state")?.value === "true";

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${rubikSans.variable} ${jetbrainsMono.variable} antialiased h-[calc(100dvh)] w-full`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <PGliteWrapper>
            <TanstackProvider>
              <SidebarProvider
                defaultOpen={defaultOpen}
                className="grid h-dvh grid-rows-[auto_1fr]"
              >
                <div className="row-span-2 flex">
                  <LeftSidebar />
                  <main className="relative flex flex-1 overflow-auto">
                    <div className="grid flex-1">{children}</div>
                  </main>
                </div>
              </SidebarProvider>
              <Toaster position="top-right" />
            </TanstackProvider>
          </PGliteWrapper>
        </ThemeProvider>
      </body>
    </html>
  );
}
